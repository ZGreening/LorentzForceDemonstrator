// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcMessageSerialization.proto

#include "grpcMessageSerialization.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace grpcserver {
class setVariablesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<setVariables> _instance;
} _setVariables_default_instance_;
class variablesSetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<variablesSet> _instance;
} _variablesSet_default_instance_;
}  // namespace grpcserver
static void InitDefaultsscc_info_setVariables_grpcMessageSerialization_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcserver::_setVariables_default_instance_;
    new (ptr) ::grpcserver::setVariables();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcserver::setVariables::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_setVariables_grpcMessageSerialization_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_setVariables_grpcMessageSerialization_2eproto}, {}};

static void InitDefaultsscc_info_variablesSet_grpcMessageSerialization_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::grpcserver::_variablesSet_default_instance_;
    new (ptr) ::grpcserver::variablesSet();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpcserver::variablesSet::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_variablesSet_grpcMessageSerialization_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_variablesSet_grpcMessageSerialization_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_grpcMessageSerialization_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_grpcMessageSerialization_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_grpcMessageSerialization_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_grpcMessageSerialization_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcserver::setVariables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcserver::setVariables, deflectingv_),
  PROTOBUF_FIELD_OFFSET(::grpcserver::setVariables, accelv_),
  PROTOBUF_FIELD_OFFSET(::grpcserver::setVariables, current_),
  PROTOBUF_FIELD_OFFSET(::grpcserver::setVariables, magneticarc_),
  PROTOBUF_FIELD_OFFSET(::grpcserver::setVariables, deflectingpolarity_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcserver::variablesSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::grpcserver::variablesSet, flag_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpcserver::setVariables)},
  { 10, -1, sizeof(::grpcserver::variablesSet)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcserver::_setVariables_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::grpcserver::_variablesSet_default_instance_),
};

const char descriptor_table_protodef_grpcMessageSerialization_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036grpcMessageSerialization.proto\022\ngrpcse"
  "rver\"u\n\014setVariables\022\023\n\013deflectingv\030\001 \001("
  "\005\022\016\n\006accelv\030\002 \001(\005\022\017\n\007current\030\003 \001(\005\022\023\n\013ma"
  "gneticarc\030\004 \001(\005\022\032\n\022deflectingpolarity\030\005 "
  "\001(\005\"\034\n\014variablesSet\022\014\n\004flag\030\001 \001(\0102W\n\016mes"
  "sagePassing\022E\n\rsendVariables\022\030.grpcserve"
  "r.setVariables\032\030.grpcserver.variablesSet"
  "\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_grpcMessageSerialization_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_grpcMessageSerialization_2eproto_sccs[2] = {
  &scc_info_setVariables_grpcMessageSerialization_2eproto.base,
  &scc_info_variablesSet_grpcMessageSerialization_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_grpcMessageSerialization_2eproto_once;
static bool descriptor_table_grpcMessageSerialization_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_grpcMessageSerialization_2eproto = {
  &descriptor_table_grpcMessageSerialization_2eproto_initialized, descriptor_table_protodef_grpcMessageSerialization_2eproto, "grpcMessageSerialization.proto", 290,
  &descriptor_table_grpcMessageSerialization_2eproto_once, descriptor_table_grpcMessageSerialization_2eproto_sccs, descriptor_table_grpcMessageSerialization_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_grpcMessageSerialization_2eproto::offsets,
  file_level_metadata_grpcMessageSerialization_2eproto, 2, file_level_enum_descriptors_grpcMessageSerialization_2eproto, file_level_service_descriptors_grpcMessageSerialization_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_grpcMessageSerialization_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_grpcMessageSerialization_2eproto), true);
namespace grpcserver {

// ===================================================================

void setVariables::InitAsDefaultInstance() {
}
class setVariables::_Internal {
 public:
};

setVariables::setVariables()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcserver.setVariables)
}
setVariables::setVariables(const setVariables& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deflectingv_, &from.deflectingv_,
    static_cast<size_t>(reinterpret_cast<char*>(&deflectingpolarity_) -
    reinterpret_cast<char*>(&deflectingv_)) + sizeof(deflectingpolarity_));
  // @@protoc_insertion_point(copy_constructor:grpcserver.setVariables)
}

void setVariables::SharedCtor() {
  ::memset(&deflectingv_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deflectingpolarity_) -
      reinterpret_cast<char*>(&deflectingv_)) + sizeof(deflectingpolarity_));
}

setVariables::~setVariables() {
  // @@protoc_insertion_point(destructor:grpcserver.setVariables)
  SharedDtor();
}

void setVariables::SharedDtor() {
}

void setVariables::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const setVariables& setVariables::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_setVariables_grpcMessageSerialization_2eproto.base);
  return *internal_default_instance();
}


void setVariables::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcserver.setVariables)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&deflectingv_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deflectingpolarity_) -
      reinterpret_cast<char*>(&deflectingv_)) + sizeof(deflectingpolarity_));
  _internal_metadata_.Clear();
}

const char* setVariables::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 deflectingv = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          deflectingv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 accelv = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          accelv_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 current = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          current_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 magneticarc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          magneticarc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 deflectingpolarity = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          deflectingpolarity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* setVariables::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcserver.setVariables)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 deflectingv = 1;
  if (this->deflectingv() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_deflectingv(), target);
  }

  // int32 accelv = 2;
  if (this->accelv() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_accelv(), target);
  }

  // int32 current = 3;
  if (this->current() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_current(), target);
  }

  // int32 magneticarc = 4;
  if (this->magneticarc() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_magneticarc(), target);
  }

  // int32 deflectingpolarity = 5;
  if (this->deflectingpolarity() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_deflectingpolarity(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcserver.setVariables)
  return target;
}

size_t setVariables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcserver.setVariables)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 deflectingv = 1;
  if (this->deflectingv() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_deflectingv());
  }

  // int32 accelv = 2;
  if (this->accelv() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_accelv());
  }

  // int32 current = 3;
  if (this->current() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_current());
  }

  // int32 magneticarc = 4;
  if (this->magneticarc() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_magneticarc());
  }

  // int32 deflectingpolarity = 5;
  if (this->deflectingpolarity() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_deflectingpolarity());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void setVariables::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcserver.setVariables)
  GOOGLE_DCHECK_NE(&from, this);
  const setVariables* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<setVariables>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcserver.setVariables)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcserver.setVariables)
    MergeFrom(*source);
  }
}

void setVariables::MergeFrom(const setVariables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcserver.setVariables)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.deflectingv() != 0) {
    _internal_set_deflectingv(from._internal_deflectingv());
  }
  if (from.accelv() != 0) {
    _internal_set_accelv(from._internal_accelv());
  }
  if (from.current() != 0) {
    _internal_set_current(from._internal_current());
  }
  if (from.magneticarc() != 0) {
    _internal_set_magneticarc(from._internal_magneticarc());
  }
  if (from.deflectingpolarity() != 0) {
    _internal_set_deflectingpolarity(from._internal_deflectingpolarity());
  }
}

void setVariables::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcserver.setVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setVariables::CopyFrom(const setVariables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcserver.setVariables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setVariables::IsInitialized() const {
  return true;
}

void setVariables::InternalSwap(setVariables* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(deflectingv_, other->deflectingv_);
  swap(accelv_, other->accelv_);
  swap(current_, other->current_);
  swap(magneticarc_, other->magneticarc_);
  swap(deflectingpolarity_, other->deflectingpolarity_);
}

::PROTOBUF_NAMESPACE_ID::Metadata setVariables::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void variablesSet::InitAsDefaultInstance() {
}
class variablesSet::_Internal {
 public:
};

variablesSet::variablesSet()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcserver.variablesSet)
}
variablesSet::variablesSet(const variablesSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:grpcserver.variablesSet)
}

void variablesSet::SharedCtor() {
  flag_ = false;
}

variablesSet::~variablesSet() {
  // @@protoc_insertion_point(destructor:grpcserver.variablesSet)
  SharedDtor();
}

void variablesSet::SharedDtor() {
}

void variablesSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const variablesSet& variablesSet::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_variablesSet_grpcMessageSerialization_2eproto.base);
  return *internal_default_instance();
}


void variablesSet::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcserver.variablesSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flag_ = false;
  _internal_metadata_.Clear();
}

const char* variablesSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool flag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* variablesSet::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcserver.variablesSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool flag = 1;
  if (this->flag() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcserver.variablesSet)
  return target;
}

size_t variablesSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcserver.variablesSet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool flag = 1;
  if (this->flag() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void variablesSet::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcserver.variablesSet)
  GOOGLE_DCHECK_NE(&from, this);
  const variablesSet* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<variablesSet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcserver.variablesSet)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcserver.variablesSet)
    MergeFrom(*source);
  }
}

void variablesSet::MergeFrom(const variablesSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcserver.variablesSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
}

void variablesSet::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcserver.variablesSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void variablesSet::CopyFrom(const variablesSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcserver.variablesSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool variablesSet::IsInitialized() const {
  return true;
}

void variablesSet::InternalSwap(variablesSet* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(flag_, other->flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata variablesSet::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcserver
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcserver::setVariables* Arena::CreateMaybeMessage< ::grpcserver::setVariables >(Arena* arena) {
  return Arena::CreateInternal< ::grpcserver::setVariables >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcserver::variablesSet* Arena::CreateMaybeMessage< ::grpcserver::variablesSet >(Arena* arena) {
  return Arena::CreateInternal< ::grpcserver::variablesSet >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
